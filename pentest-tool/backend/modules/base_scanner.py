from abc import ABC, abstractmethod
from typing import Dict, Any


class BaseScanner(ABC):
    """
    Base class for all scanner implementations.
    All scanner types should inherit from this class and implement the required methods.
    """
    
    def __init__(self):
        """Initialize the scanner with default configuration."""
        self.name = "BaseScanner"
        self.description = "Base scanner class to be extended"
        
    @abstractmethod
    def scan(self, url: str) -> Dict[str, Any]:
        """
        Scan the provided URL and return the results.
        
        Args:
            url: The target URL to scan
            
        Returns:
            A dictionary containing the scan results
        """
        raise NotImplementedError("Subclasses must implement this method")
    
    def validate_url(self, url: str) -> bool:
        """
        Validate that the URL is properly formatted.
        
        Args:
            url: The URL to validate
            
        Returns:
            True if the URL is valid, False otherwise
        """
        # Basic validation, can be enhanced in subclasses
        return url.startswith(("http://", "https://")) 