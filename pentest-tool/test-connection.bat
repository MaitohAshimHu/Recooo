@echo off
echo === Testing Frontend to Backend Connection ===
echo.

echo Checking Docker...
docker info > nul 2>&1
if %ERRORLEVEL% neq 0 (
    echo Error: Docker is not running or not available.
    echo Please start Docker and try again.
    exit /b 1
)

echo Testing Docker Compose...
docker-compose --version > nul 2>&1
if %ERRORLEVEL% neq 0 (
    echo Error: Docker Compose is not installed or not available.
    exit /b 1
)
echo Docker Compose is available.

echo.
echo Starting services with Docker Compose...
docker-compose up -d

echo.
echo Waiting for services to start up...
timeout /t 10 > nul

echo.
echo Testing Backend API health...
for /f "delims=" %%i in ('curl -s http://localhost:8000/health') do set BACKEND_HEALTH=%%i

echo %BACKEND_HEALTH% | find "status" | find "ok" > nul
if %ERRORLEVEL% equ 0 (
    echo Backend API is healthy!
) else (
    echo Backend API health check failed: %BACKEND_HEALTH%
    echo Try accessing http://localhost:8000/health in your browser
)

echo.
echo Testing Frontend availability...
curl -s -o nul -w "%%{http_code}" http://localhost:3000 > temp.txt
set /p FRONTEND_STATUS=<temp.txt
del temp.txt

if "%FRONTEND_STATUS%"=="200" (
    echo Frontend is available!
) else (
    echo Frontend check failed with status: %FRONTEND_STATUS%
    echo This could be normal for Next.js which might return a different status
    echo Try accessing http://localhost:3000 in your browser
)

echo.
echo === Connection Test Complete ===
echo.
echo Access the connection test page at: http://localhost:3000/test-connection
echo.
echo When finished testing, you can stop the services with:
echo   docker-compose down
echo.
echo Happy testing! 